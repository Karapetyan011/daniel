package hexadecimal;

  class Hexadecimal {

    transient int tmp = 8;
    public static void main(String[] args) {

        // 0xff  — это число, представленное в шестнадцатеричной системе счисления (основание 16)
        // F в шестнадцатеричном формате эквивалентно 1111 в двоичной системе счисления.
        // 0xff  в двоичном коде — это 11111111.

        // 32 бит, значение 0xff  равно 255 :
        int x = 0xff;
        System.out.println(x);

        // 8 бит, значение 0xff  равно -1 :
        byte y = (byte) 0xff;
        System.out.println(y);


        //Предположим, что у нас есть целое число x , хранящееся в 32 битах, которое представляет цвет в системе RGBA,
        // что означает, что у него есть 8 битов для каждого параметра (R, G, B и A):

       // 00010000 00111001 10101000 00000111,

        //R = 16 (00010000 в двоичном формате)
        //G = 57 (00111001 в двоичном формате)
        //B = 168 (10101000 в двоичном формате)
        //A = 7 (00000111 в двоичном формате)

        // Таким образом, x в двоичном виде будет представлен как 00010000 00111001 10101000 00000111,
        // что эквивалентно 272214023 в десятичном виде.

        // 00010000 00111001 10101000 00000111,

        int rgba = 272214023;

        int r = rgba >> 24 & 0xff;    // 000000000 00000000 00000000 00010000
                                      //                             11111111
        System.out.println(r);

        int g = rgba >> 16 & 0xff;    // 000000000 00000000 00010000 00111001
                                       //                            11111111
        System.out.println(g);

        int b = rgba >> 8 & 0xff;     // 00000000 00010000 00111001 10101000
                                        //                          11111111
        System.out.println(b);

        int a = rgba & 0xff;           // 00010000 00111001 10101000 00000111
                                         //                          11111111
        System.out.println(a);

    }
}
